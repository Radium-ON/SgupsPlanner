<controls:ModernUserControl x:Class="EventsEdit.Views.EventsEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:qc="http://QuickConverter.CodePlex.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:controls="clr-namespace:SgupsPlanner.Core.Controls;assembly=SgupsPlanner.Core"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="331.934" d:DesignWidth="1019.647"
             x:Name="user_control">
    <controls:ModernUserControl.Resources>
        <ResourceDictionary Source="pack://application:,,,/SgupsPlanner.Core;component/Assets/ResourceDictionary.xaml"/>
    </controls:ModernUserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="NavigatedTo">
            <prism:InvokeCommandAction Command="{Binding NavigatedToCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="NavigatedFrom">
            <prism:InvokeCommandAction Command="{Binding NavigatedFromCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="NavigatingFrom">
            <prism:InvokeCommandAction Command="{Binding NavigatingFromCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="FragmentNavigation">
            <prism:InvokeCommandAction Command="{Binding FragmentNavigationCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <prism:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="IsVisibleChanged">
            <prism:InvokeCommandAction Command="{Binding IsVisibleChangedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Style="{StaticResource ContentRoot}">
        <ScrollViewer>
            <Grid Name="grid_all_banks">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="stack_banks" Grid.Row="0" Grid.RowSpan="2">
                    <TextBlock Text="БАНКИ" Style="{StaticResource Heading2}" />
                    <DataGrid x:Name="data_grid_banks" AutoGenerateColumns="False" CanUserAddRows="False" MaxHeight="400"
                          SelectionMode="Single" SelectionUnit="FullRow"
                          EnableRowVirtualization="True"
                          ScrollViewer.CanContentScroll="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsVirtualizing="True"
                          ItemsSource="{Binding BankViewModels, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedBankViewModel, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">

                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Добавить банк" Icon="{DynamicResource add_to_list_icon}"
                                      Command="{Binding AddBankCommand}"/>
                                <MenuItem Header="Добавить предложение для банка" Icon="{DynamicResource add_to_list_icon}"
                                          Command="{Binding AddOfferToBankCommand}"/>
                                <MenuItem Header="Удалить банк" Icon="{DynamicResource delete_icon}"
                                          Command="{Binding DeleteBankCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                        <DataGrid.Columns>
                            <mui:DataGridTextColumn Header="Наименование"  Binding="{Binding EventName, ValidatesOnDataErrors=True}" Validation.ErrorTemplate="{x:Null}"/>
                            <mui:DataGridTextColumn Header="ОГРН" Binding="{Binding Ogrn, ValidatesOnDataErrors=True}" Validation.ErrorTemplate="{x:Null}" />
                            <mui:DataGridTextColumn Header="Лицензия" Binding="{Binding Description, ValidatesOnDataErrors=True}" Validation.ErrorTemplate="{x:Null}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>

                <StackPanel x:Name="stack_bank_clients" Grid.Row="0" Grid.Column="1" Margin="20,6,0,0"
                             >
                             <!--Visibility="{qc:Binding '$P.Count!=0 ? Visibility.Visible : Visibility.Collapsed', P={Binding ElementName=data_grid_banks, Path=SelectedItem.LoanAgreements}}"-->
                    <TextBlock Text="Клиенты банка:" Style="{StaticResource Emphasis}"/>

                    <DataGrid ItemsSource="{Binding ElementName=data_grid_banks, Path=SelectedItem.LoanAgreements}" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <mui:DataGridTextColumn Header="Имя клиента">
                                <mui:DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0} {1}">
                                        <Binding Path="Client.FirstName"/>
                                        <Binding Path="Client.LastName"/>
                                    </MultiBinding>
                                </mui:DataGridTextColumn.Binding>
                            </mui:DataGridTextColumn>
                            <mui:DataGridTextColumn Header="Номер договора" Binding="{Binding AgreementNumber}"/>
                            <mui:DataGridTextColumn Header="Ставка %" Binding="{Binding Interest, StringFormat=P2}"/>
                            <mui:DataGridTextColumn Header="Сумма" Binding="{Binding LoanAmount, StringFormat=C0, ConverterCulture='ru-RU'}"/>
                            <mui:DataGridTextColumn Header="Дата заключения" Binding="{Binding ContractDate, StringFormat=d}"/>
                            <mui:DataGridCheckBoxColumn Header="Погашен" Binding="{Binding IsRepaid}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>

                <StackPanel x:Name="stack_bank_offers" Grid.Row="1" Grid.Column="1" Margin="20,17,0,0">
                    <StackPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Добавить предложение для банка" Icon="{DynamicResource add_to_list_icon}"
                                      Command="{Binding AddOfferToBankCommand}"/>
                        </ContextMenu>
                    </StackPanel.ContextMenu>
                    <TextBlock Text="Банк предложит кредит на этих условиях:" Style="{StaticResource Emphasis}"/>

                    <DataGrid ItemsSource="{Binding ElementName=data_grid_banks, Path=SelectedItem.Offers}" AutoGenerateColumns="False" IsReadOnly="True" MaxWidth="1000">
                        <DataGrid.Columns>
                            <mui:DataGridTextColumn Header="Ставка %" Width="Auto" Binding="{Binding Interest, StringFormat=P2}"/>
                            <mui:DataGridTextColumn Header="Мин. сумма кредита" Width="Auto" Binding="{Binding MinLoanAmount, StringFormat=C0, ConverterCulture='ru-RU'}"/>
                            <mui:DataGridTextColumn  Header="Макс. сумма кредита" Width="Auto" Binding="{Binding MaxLoanAmount, StringFormat=C0, ConverterCulture='ru-RU'}"/>
                            <mui:DataGridTextColumn  Header="Макс. срок в месяцах" Width="Auto" Binding="{Binding MaxOfMonths}"/>
                            <mui:DataGridTextColumn  Header="Мин. возраст" Width="Auto" Binding="{Binding MinAge}"/>
                            <mui:DataGridTextColumn  Header="Мин. стаж" Width="Auto" Binding="{Binding MinSeniority}"/>
                            <mui:DataGridTextColumn  Header="Активные кредиты" Width="Auto" Binding="{Binding ActiveLoansNumber}"/>
                        </DataGrid.Columns>

                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Удалить" Icon="{DynamicResource delete_icon}"
                                          Command="{Binding DeleteOfferFromBankCommand}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</controls:ModernUserControl>
